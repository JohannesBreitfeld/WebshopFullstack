@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Webshop.Application.DTOs.Responses
@using Webshop.Presentation.Auth
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager Navigation


<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" /> 
<MudPopoverProvider /> 
<MudDialogProvider /> 
<MudSnackbarProvider />
@* <MudLayout> *@
@*     <MudAppBar Elevation="1"> *@
@*         <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" /> *@
@*         <MudText Typo="Typo.h5" Class="ml-3">Application</MudText> *@
@*         <MudSpacer /> *@
@*         <MudNavLink Href="/login"> *@
@*             <MudIcon Icon="@Icons.Material.Filled.Person" /> *@
@*             @if(role == "Admin")  *@
@*             { *@
@*                 <span>Inloggad som Admin</span> *@
@*             } *@
@*             else if(role == "Customer" && customerData is not null ) *@
@*             { *@
@*                 <span>Inloggad som @customerData.FirstName</span> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <span>Logga in</span> *@
@*             } *@
@*         </MudNavLink> *@
@*         <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" /> *@
@*         <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" /> *@
@*     </MudAppBar> *@
@*     <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2"> *@
@*         <NavMenu /> *@
@*     </MudDrawer> *@
@*     <MudMainContent Class="mt-16 pa-4"> *@
@*         @Body *@
@*     </MudMainContent> *@
@* </MudLayout> *@


<MudLayout>
    <MudAppBar Color="Color.Primary">
        <MudIconButton OnClick="DrawerToggle" Icon="mdi-menu" Color="Color.Inherit" Class="d-md-none" />
        <MudText Typo="Typo.h6">Min Webshop</MudText>
        <MudSpacer />
        <MudButton OnClick="GoToLogin" Color="Color.Secondary" Class="d-none d-md-flex">Logga in</MudButton>
    </MudAppBar>

    <MudDrawer Open="@_drawerOpen" OnClose="CloseDrawer" Class="d-md-none" Anchor="Anchor.Left">
        <MudNavMenu>
            <MudNavLink OnClick="GoToHome">Hem</MudNavLink>
            <MudNavLink OnClick="GoToProducts">Produkter</MudNavLink>
            <MudNavLink OnClick="GoToLogin">Logga in</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <MudContainer Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = false;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;
    private CustomerResponse? customerData;
    private string? role;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity != null && user.Identity.IsAuthenticated)
            {
                role = user.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;
                customerData = await AuthStateProvider.GetCustomerDataAsync();
            }

            StateHasChanged();
        }
    }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    private void GoToLogin() => Navigation.NavigateTo("/login");
    private void GoToHome() => Navigation.NavigateTo("/");
    private void GoToProducts() => Navigation.NavigateTo("/products");

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


